# -*- coding: utf-8 -*-
"""KNN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ORO1WXRQYLi7seqIHdjc-4gf8VapoE5f

# **KNN - Diabetes Predictor**
"""

import pandas as pd #Dataframe
import numpy as np #Number Array

from sklearn.model_selection import train_test_split #Splitting Data for Testing and Training
from sklearn.preprocessing import StandardScaler
from sklearn.neighbors import KNeighborsClassifier

#For Testing
from sklearn.metrics import confusion_matrix
from sklearn.metrics import f1_score
from sklearn.metrics import accuracy_score

dataset = pd.read_csv('https://raw.githubusercontent.com/fall3511/Machine-Learning/master/KNN/diabetes.csv')
dataset
#print(len(dataset))
#print(dataset.head())

# replace zeros
zero_not_accepted = ['Glucose', 'BloodPressure', 'SkinThickness', 'BMI','Insulin']

for column in zero_not_accepted:
  dataset[column] = dataset[column].replace(0, np.NaN)
  mean = int(dataset[column].mean(skipna=True))
  dataset[column] = dataset[column].replace(np.NaN, mean)

print(dataset['Glucose'])

# split dataset
x = dataset.iloc[:, 0:8]
y = dataset.iloc[:, 8]
x_train, x_test, y_train, y_test = train_test_split(x, y, random_state=0, test_size=0.2)

# Feature scaling - all the data is between -1 and 1
sc_x = StandardScaler()
x_train = sc_x.fit_transform(x_train)
x_test = sc_x.transform(x_test)

# Define the model: Init K-NN
classifier = KNeighborsClassifier(n_neighbors=11, p=2,metric='euclidean')

# Fit Model
classifier.fit(x_train, y_train)

# Predict the test set results
y_pred = classifier.predict(x_test)
y_pred

# Evaluate Model
cm = confusion_matrix(y_test, y_pred)
print (cm)
print(f1_score(y_test, y_pred))

print(accuracy_score(y_test, y_pred))